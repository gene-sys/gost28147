





                         ПРОГРАММА ОТЛАДЧИК DD


                         РУКОВОДСТВО ОПЕРАТОРА


                                 1999

                                 - 2 -








                              Аннотация



     В данном  руководстве  описаны  возможности  программы  отладчика
SDBG, синтаксис отладочных директив и методы работы с отладчиком.

                                 - 3 -








                              СОДЕРЖАНИЕ



    Аннотация                                                        2


1.  Назначение программы                                             5


2.  Условия выполнения                                               5


3.  Подготовка программ к отладке                                    6


4.  Общее сведения                                                   7

4.1.    Настройка на таблицу имен программ. Директива "NL"           8
4.2.    Директивы управления исполнением программы                   8
4.2.1.    Установка и  отмена  точек  останова  по  счетчику
          команд. Директивы "B" и "H"                                8
4.2.2.    Установка  и  отмена  сторожевых  точек  останова.
          Директива "W"                                              9
4.2.3.    Пошаговое исполнение. Директива "P"                       10
4.2.3.1.  Запуск на исполнение. Директива "G"                       10
4.3.    Директивы доступа                                           12
4.3.1.    Открыть слово. Директива "/"                              12
4.3.2.    Открыть байт. Директива "\"                               12
4.3.3.    Открыть (дизассемблировать) команду. Директива "D"        13
4.3.4.    Закрыть элемент. Директива "ВК"                           13
4.3.5.    Открыть следующий адрес. Директива "ПС"                   14
4.3.5.1.  Открыть предыдущий адрес. Директива "^"                   14
4.3.6.    Открыть ячейку по  абсолютному  адресу.  Директива
          "@"                                                       15
4.3.7.    Возврат к прерванной последовательности. Директива
          "V"                                                       16
4.3.8.    Вывод таблиц. Директива "T"                               16
4.3.9.    Вывод текстовой информации. Директива "A"                 17
4.3.10.   Вывод и изменение содержимого  памяти  в  заданном
          формате. Директива "F"                                    18
4.3.11.   Построчный транслятор. Директива "SA"                     19
4.3.12.   Установка границ области памяти. Директива "MB"           20
4.3.12.1. Поиск кодов. Директива "MD"                               20
4.3.13.   Поиск обращений к адресу. Директива "MP"                  21
4.3.14.   Поиск строки. Директива "MA"                              21
4.3.15.   Форматирование области памяти. Директива "MF"             22
4.3.16.   Копирование области памяти в файл. Директива "MS"         22
4.3.17.   Копирование файла в область памяти. Директива "ML"        23
4.3.18.   Установка  и   отмена   режима   протоколирования.
          Директива "NP"                                            24
4.3.19.   Запуск командных файлов. Директива "NC"                   25
4.3.20.   Школа. Директива "?"                                      26
4.4.    Прочие директивы                                            27
4.4.1.    Определение параметров именем. Директива "L"              27

                                 - 4 -




4.4.2.    Директива "ПРОБЕЛ"                                        27
4.4.3.    Ввод кода. Директива "<"                                  27
4.4.4.    Ввод комментария. Директива "!"                           28
4.4.5.    Ввод  признака   приостанова   командного   файла.
          Директива "%"                                             28
4.4.6.    Занесение кода символа. Директива "'"                     29
4.4.7.    Занесение кода 2-х символов. Директива """                29

5.  Директивы нестандартного доступа                                30

5.1.    Доступ на диск. Директива "NA"                              30
5.2.    Доступ к оверлейным программам                              31
5.2.1.    Общие сведения                                            31
5.2.2.    Директива "NO"                                            31

ПРИЛОЖЕНИЕ.                                                         33


                                 - 5 -




                       1. Назначение программы




     Программа отладчик SDBG предназначена для отладки программ  поль-
зователя, написанных на языке ассемблера, и позволяет осуществлять:

       - доступ к переменным и кодам программы по адресам ОЗУ  и  име-
         нам, определенным в исходном тексте программы;

       - доступ к регистрам процессора;

       - исполнение отлаживаемой программы в автоматическом или  поша-
         говом режиме;

       - останов отлаживаемой программы при заданных значениях счетчи-
         ка команд и/или при изменении значения заданной ячейки;

       - реализацию разрешенных сервисных функций.

     Отладчик поставляется в виде исполняемой программы.




                        2. Условия выполнения



Отладчик функционирует в среде ОС ФОДОС, РАФОС (RT11,) ОС ДВК и
поставляться:

     Вариант поставки включает в себя следующие файлы:

       - DD.SAV - собственно отладчик;

       - SCHOOL.SML - файл школы;

       - TN.SAV - программа формирования таблицы имен;

     Все файлы должны быть записаны на системное устройство.

                                 - 6 -




                   3. Подготовка программ к отладке




     Для обеспечения возможности работы с именами необходимо:

       - при трансляции программ с MACRO получить листинг (если печать
         листинга не планируется,то желательно использовать  ключ  /N,
         при котором листинг содержит только таблицу имен);

       - если транслируемые раздельно модули имеют одинаковые  переме-
         щаемые секции, необходимо, если отсутствуют некоторые листин-
         ги, в командной строке компоновщика указывать вначале  файлы,
         имеющие листинг, а затем  остальные.  Особенности  подготовки
         программ к отладке

     Для подготовки программы к отладке необходимо ее скомпановать,  а
затем запустить программу формирования таблицы имен командой монитора

                                 R TN

     Первым входным файлом программы TN является файл карты  загрузки.
Следом за ним указываются файлы листингов в том же  порядке,  в  каком
указывались об'ектные файлы в командной строке компановщика  (подробно
см. в описании программы TN).

 Пример:

 .R LINK
 *PROG,PROG=PROG1,PROG2,PROG3,PROG4
 *<СУ/C>
 .R TN
 Файл[.TNA],Файл[.TNF],Файл[.TNS]=Файл[.MAP][Ключи]
 *PROG=PROG//
 Файл1[.LST],Файл2[.LST],Файл3[.LST],Файл4[.LST][Ключи]
 *PROG1,PROG2,PROG3,PROG4//
 Файл[.TNA],Файл[.TNF],Файл[.TNS]=Файл[.MAP][Ключи]
 *<СУ/C>
 .

     Загрузка отладчика производится командой монитора

                            RUN DD [КОМАДЫ]

     Где:

КОМАДЫ - текстовая строка, корорая интерпритруется отладчиком как пер-
         вые команды после запуска;

     ВНИМАНИЕ: Пробелы в строке не донускаются.

     После того как отладчик напечатает приглашение необходимо перейти
в первое адресное пространство директивой "1:" и загрузить  отлаживае-
мую программу в память директивой "ML", если это не сделано параметром
запуска КОМАДЫ.

     Для того, чтобы прекратить отладку и выйти в монитор, нужно ввес-
ти с клавиатуры терминала символ <СУ/C>.

                                 - 7 -




                          4. Общее сведения




     Отладчик указывает свою готовность принять директиву печатью сим-
вола "#" на  экране  терминала  пользователя.  В  процессе  выполнения
директивы "NP", "NA" и "NO" указанный символ заменяется на другой.

     Большинство директив отладчика требуют задания адресов для  иден-
тификации элементов данных или программ, на которые производится ссыл-
ка. Если отсутствует специальная оговорка, то адреса могут  задаваться
следующим образом:

       - восьмеричным числом от 0 до 177777;

       - именем, определенным в исходном тексте программы;

       - регистром процессора.

     Имя задается символьной строкой и должно  соответствовать  одному
из имен, определенных в исходном тексте программы. По заданному  имени
из таблицы имен выбирается адрес, по которому будет происходить  обра-
щение.

     Имя задается в формате:

                 [L<имя программы>,]L<имя переменной>

     где

L
       - признак имени (см. директиву "L");

<имя переменной>
       - имя, определенное в исходном тексте программы;

<имя программы>
       - имя программы, в которой об'явлена переменная. Под программой
         понимается отдельно транслируемый модуль.

     Параметр <имя програмы> может быть опущен. В  этом  случае  выби-
рается последнее имя програмы, указанное в предшествующих директивах.

     Регистры процессора задаются в формате:

                               R<символ>

где <символ>
       - символ, идентифицирующий регистр.

     Приняты следующие обозначения регистров:

R0...R5
       - Регистры общего назначения;

R6
       - регистр - указатель стека;

                                 - 8 -




R7
       - регистр - счетчик команд;

RS
       - регистр состояния процессора.

     При обнаружении ошибки отладчик печатает  сообщение,  после  чего
переходит в диалоговый режим.

     Редактирование принятых символов ( кроме символов директив ) осу-
ществляется управляющими символами:

       - <СУ/U>-удалить строку.

       - <ЗБ> -удалить введенный символ.

     В настоящем руководстве все  ниже  приведенные  числа,  если  нет
десятичной точки, являются восьмеричными. CPT Директивы отладчика



      4.1. Настройка на таблицу имен программ. Директива "NL"



     Синтаксис:

 NL
 Имя файла таблицы имен :DP1:PROG<ВК>



      4.2. Директивы управления исполнением программы





      4.2.1. Установка и  отмена  точек  останова  по  счетчику
             команд. Директивы "B" и "H"



     Отладчик допускает установку  снимаемых  (H)  и  неснимаемых  (B)
точек останова по счетчику команд общим числом не более 20  с  нумера-
цией от 0 до 17.

     Неснимаемые точки останова могут быть удалены из  таблицы  только
директивой. Снимаемые точки останова удаляются из  таблицы  директивой
или при реализации указанного останова.

     Останов по счетчику команд  реализуется  до  исполнения  команды,
адрес которой совпал с адресом останова.

     Синтаксис:

<A>;[<N>]B
       - установить неснимаемую точку останова с номером <N> по адресу
         <А>. Директива трактуется как ошибочная если, адрес нечетный;

                                 - 9 -




[<N>]H
       - Установить снимаемую точку останова с номером <N> по открыто-
         му адресу. Директива трактется как ошибочная, если был открыт
         байт или регистр

     Если параметр <N> опущен, то выбирается  первая  свободная  точка
останова. Если в таблице нет свободной точки  останова,  то  директива
трактуется как ошибочная.

;[<N>]B
       - исключить точку останова с номером  <N>.  Если  параметр  <N>
         опущен, то удаляются все точки останова.

     Просмотр  таблицы  точек  адресных  остановов  осуществляется  по
директиве "TB".

 Пример:

 #2000;B
 #LMETKA :3000;H
 #4000/       012701 B
 #5000;D
 005000  006301                          ASL      R1                     #B
 #6000;3B
 #;1B
 #;B



      4.2.2. Установка  и  отмена  сторожевых  точек  останова.
             Директива "W"



     Данная директива позволяет установить или отменить режим отслежи-
вания изменения байта с указанным адресом. Отладчик дапускает установ-
ку до 2 сторожевых точек останова.

     Синтаксис:

<A>;[<N>]W
       - установить точку останова с номером <N> по изменению байта  с
         адресом <А>;

[<N>]W
       - установить точку останова с номером <N> по изменению открыто-
         го байта;

     Если параметр <N> опущен, то выбирается  первая  свободная  точка
останова. Если в таблице нет свободной точки  останова,  то  директива
трактуется как ошибочная.

;[<N>]W
       - исключить точку останова с номером  <N.>  Если  параметр  <N>
         опущен, то исключаются все точки останова.

     Просмотр таблици сторожевых остановов осуществляется по директиве
"TW".

                                 - 10 -




 Пример:

 #2000;W
 #LMETKA :003000/       000005 W
 #;W



      4.2.3. Пошаговое исполнение. Директива "P"



     Синтаксис:

<A>;P
       - выполнить одну команду с адреса <А>. Адрес для данной  дирек-
         тивы должен быть четным. В противном случае  директива  трак-
         туется как ошибочная.

P
       - Выполнить одну команду по текущему значению счетчика команд.

     После выполнения команды в  пошаговом  режиме  на  экран  дисплея
выводятся операнды, если они есть, дизассемблированная команда,  кото-
рая должна выполняться следующей, и таблица состояния  регистров  (см.
директиву "G" ).

     Если исполняемая команда выводит символ на экран, то он выводится
на экран пользователя. Однако, переключения на пользовательский  экран
в данном случае не происходит. Посмотреть экран  ползователя  можно  с
помощью директивы <ТАБ>.

 Пример:

 #L.$WWSD:012564 ;P#
                                           PLSMIN:011644 \000 =
 012570  100003                          BPL      012600                 #P#
 012600  116701  177036                  MOVB     .$NAP       R1         #P#
     .$NAP :011642 \000 =
 012604  006301                          ASL      R1                     #P#
 012606  004771  010574                  JSR      PC          @TWWD(R1)  #



      4.2.3.1. Запуск на исполнение. Директива "G"



     Синтаксис:

<A>;G
       - пуск на исполнение программы с адреса <А> до точки  останова.
         Адрес для данной директивы должен быть  четным.  В  противном
         случае директива трактуется как ошибочная.

G
       - Продолжить исполнение программы с текущего значения  счетчика
         команд до точки останова.


                                 - 11 -




     При выходе программы на точку  останова  по  счетчику  команд  на
экран дисплея выводится таблица состояния регистров, дизассемблирован-
ная команда, на которой произошел останов, и сообщение:

                               B:<номер>

где <номер>
       - порядковый номер точки останова по таблице.

     При выходе программы на сторожевую точку останова на экран  дисп-
лея выводится таблица состояния регистров, дизассемблированная  коман-
да, которая должна выполнятся следующей, и сообщение:

                              <W>:<адрес>

     Таблица состояния регистров имеет вид:

          PC     R0     R1     R2     R3     R4     R5     R6   N Z V C
 LLLLLL:AAAAAA RRRRRR RRRRRR RRRRRR RRRRRR RRRRRR RRRRRR RRRRRR * * * *

     Где:

LLLLLL
       - имя, если есть, содержимого счетчика команд;

AAAAAA
       - содержимое счетчика команд;

RRRRRR
       - содержимое регистров процессора R0...R6;

*
       - значение битов условий регистра состояния процессора.

     Таблица состояние регистров всегда печатается  в  верхней  строке
экрана дисплея.

     При запуске отлаживаемой программы происходит переключение отлад-
чика на экран ползователя. При  останове  программы  вновь  включается
экран отладчика.

 Пример:

 #1010;B
 #1030;B
 #1000;G##
 B:000
 001010  012700  000004                  MOV      #000004     R0         #G##
 B:001
 001030  012701  004760                  MOV      #004760     R1         #

                                 - 12 -




      4.3. Директивы доступа



     Отладчик работает с двумя областями памяти:

       - областью данных;

       - областью программы.

     В любой момент времени открыто не  более  одной  области  памяти.
Область данных открывается директивами "/" и  "\".  Область  программы
открывается директивой "D". Регистры процессора считаются  принадлежа-
щими области данных.



      4.3.1. Открыть слово. Директива "/"



     Данная директива используется для вывода содержимого слова в виде
восьмеричного числа и имени содержимого, если оно есть.

     Синтаксис:

[<A>]/
       - открыть слово с адресом <а>. Если параметр <А> опущен,  то  в
         качестве его значения используется последний открывавшийся  в
         области данных адрес, а если он отсутствует, то адрес <0>.

;/
       - открыть как слово последний открывавшийся в области программы
         адрес, а если он отсутствует, то адрес <0>.

     Если адрес нечетный, выполняется директива "открыть байт".

См. Пример директивы "ВК".



      4.3.2. Открыть байт. Директива "\"



     Данная директива используется для вывода содержимого байта.

     Выводится содержимое байта в восьмеричном виде и  его  символьный
эквивалент, если он является печатным символом (содержимое байта боль-
ше 37).

     Синтаксис:

[<A>]\
       - открыть байт с адресом <А>. Если параметр <А>  опущен,  то  в
         качестве его значения используется последний открывавшийся  в
         области данных адрес, а если он отсутствует, то адрес <0>.

                                 - 13 -




;\
       - открыть как байт последний открывавшийся в области  программы
         адрес, а если он отсутствует, то адрес <0>.

См. Пример в дирктивы "ВК".



      4.3.3. Открыть (дизассемблировать) команду. Директива "D"



     Данная директива используется для вывода адреса команды, машинно-
го кода, мнемонического имени команды и операндов.

     Адрес в данной директиве должен бить четным. В  противном  случае
директива трактуется как ошибочная.

     Синтаксис:

[<A>];[<K>]D
       - открыть <К> команд с адреса <А>. Если параметр <А> опущен, то
         в качестве его значения используется последний  открывавшийся
         в области данных адрес, а если он отсутствует, то адрес <0>.

[<K>]D
       - Открыть <К> следующих команд;

     Дизассемблирование можно прервать символом  <су/Z>,  введенным  с
клавиатуры терминала.

     Если параметр <К> опущен, или указано нулевое  или  отрицательное
значение <К>, то принимается К=1. См. пример директивы "ВК".



      4.3.4. Закрыть элемент. Директива "ВК"



     Данная директива используется для того, чтобы изменить содержимое
элемента, если это необходимо, и закрыть его.

     Синтаксис:

<ВК>
       - закрыть элемент;

<Y><ВК>
       - изменить содержимое открытого элемента на новое <Y> и закрыть
         его;

<A>;<Y><ВК>
       - занести в байт с адресом <А> содержимое <Y>.


     Примечание. Под элементом понимают байт, слово, регистр и  коман-
ду.

                                 - 14 -




 Пример:

 #2000/       110203 10102<ВК>
 #/       010102
 #5001\101=A 102<ВК>
 #\102=B
 #R0/       001472 1400<ВК>
 #/       001400<ВК>
 #
 #2000;D
 002000  010102                         MOVB     R1          R2         #11020
 3<ВК>
 #D
 002000  110203                         MOVB     R2          R3         #



      4.3.5. Открыть следующий адрес. Директива "ПС"



     Данная директива позволяет измененять содержимое текущего  откры-
того адреса и открывать следующий по порядку адрес  в  области  данных
или в области программы.

     Если в качестве адреса задавался регистр с номером <N>, то данная
директива открывает регистр с номером <N+1>. За  регистром  R7  откры-
вается регистр R0. Для регистра RS данная директива выполняется анало-
гично директиве "ВК".

     Синтаксис:

<ПС>
       - закрыть текущий и открыть следующий по порядку адрес;

<Y><ПС>
       - изменить содержимое текущего открытого адреса и открыть  сле-
         дующий по порядку адрес.

См. Пример директивы "^".



      4.3.5.1. Открыть предыдущий адрес. Директива "^"



     Данная директива позволяет измененять содержимое текущего  откры-
того адреса и открывать предыдующий по порядку адрес в области  данных
или в области программы.

     Если в качестве адреса задавался регистр с номером <N>, то данная
директива открывает регистр с номером <N-1>. За  регистром  R0  откры-
вается регистр R7. Для регистра RS данная директива выполняется анало-
гично директиве "ВК".

     Синтаксис:

                                 - 15 -




^
       - закрыть текущий и открыть предыдующий по порядку адрес;

<Y>^
       - изменить  содержимое  текущего  открытого  адреса  и  открыть
         преыддующий по порядку адрес.

 Пример:

 #2000/       001174 1176<ПС>
        002002 /       000240 010102^
        002000 /       001176
 #R6/       001000 <ПС>
 R7/       000000 <ПС>
 R0/       001174 ^
 R7/       000000 ^
 R6/       001000 <ВК>
 #10746;D
 010746  012767  000002  176420         MOV      #2          007376     <ПС>
        010750 :000002 4<ПС>
        010752 :176420 10746;D
 010746  012767  000004  176420         MOV      #4          007376     D
 010754  010102                         MOV      R1          R2         ^
        010752 :176420 ^
        010750 :000004 2<ВК>
 #10746;D
 010746  012767  000002  176420         MOV      #2          007376



      4.3.6. Открыть ячейку по  абсолютному  адресу.  Директива
             "@"



     Данная директива позволяет:

       - изменить содержимое текущего открытого слова и открыть  слово
         по адресу, равному содержимому открытого слова, если предыду-
         щей директивой было открыто слово;

       - открыть команду по адресу последнего операнда, если  предыду-
         щей директивой была открыта команда.

     Директива трактуется как ошибочная,  если  предыдущей  директивой
был открыт байт.

     Синтаксис:

@
       - закрыть текущее слово (команду) и открыть  слово  (команду)по
         абсолютному адресу.

<Y>@
       - Изменить содержимое текущего открытого слова и открыть  слово
         по адресу <Y>.

См. Пример директивы "V".

                                 - 16 -




      4.3.7. Возврат к прерванной последовательности. Директива
             "V"



     Данная директива позволяет:

       - изменять содержимое открытого  слова  и  открывать  последнее
         слово той последовательности, которая была прервана  директи-
         вой "@", если предыдущей директивой было открыто слово;

       - открывать последнюю команду той  последовательности,  которая
         была прервана директивой "@", если предыдущей директивой была
         открыта команда.

     Синтаксис :

V
       - закрыть текущее слово (команду)  и  открыть  последнее  слово
         (команду) последовательности, прерванной директивой "@";

<Y>;V
       - изменить содержимое текущего открытого слова и  открыть  пос-
         леднее слово последовательности, прерванной директивой "ю".

     Директива трактуется  как  ошибочная,  если  не  была  отработана
директива "ю", или слово было открыто по адресу,  равному  содержимому
открытого регистра.

 Пример:

 #1032/       001400 @
        001400 /       000405 V
        001032 /       001400 <ВК>
 #R6/       000776 @
        000776 /       000005 <ВК>
 #11164;D
 011164  004564  000636                JSR      R5          012206     @
 012206  122700  000037                CMPB     #37         R0          V
 011164  004564  000636                JSR      R5          012206



      4.3.8. Вывод таблиц. Директива "T"



     Директивы данной грууппы  позволяют  выводить  на  экран  дисплея
содержимое внутренних таблиц отладчика и определенных массивов памяти.

     Прервать выполнение директивы можно символом <СУ/Z>, введенным  с
клавиатуры терминала.

     Синтаксис:

<A>;<N>T
       - показать содержимое <N> слов памяти с адреса  <А>.  Директива
         трактуется как ошибочная, если указан нечетный адрес;

                                 - 17 -




<N>T
       - показать содержимое <N> слов памяти с открытого адреса;

<A>;TA
       - показать имя переменной, ближайшей к указанному  адресу  <А>,
         смещение от переменной к данному адресу и  имя  программы,  в
         которой определена переменная;

TA
       - показать имя переменной, ближайшей к открытому адресу, смеще-
         ние от переменной к данному адресу и имя программы, в которой
         определена переменная.данная директива трактуется как ошибоч-
         ная, если был открыт регистр;

TB
       - показать таблицу точек останова по счетчику команд;

TW
       - показать таблицу сторожевых точек останова;

TM
       - показать таблицу состояния границ памяти, маски  и  аргумента
         поиска.


     Примечание. Наличие 177777 в таблицах точек  останова  говорит  о
том, что данное место в таблице свободно.

 Пример:

 #4000;4T
 ST    :00400 :       000754        000167        177352        105721
 #2000;TA=METKA +000042 PROG1
 #TB
 ТАБЛИЦА ОСТАНОВОВ ПО СЧЕТЧИКУ КОМАНД
 003000 006742 007200 177777
 177777 177777 177777 177777
 177777 177777 177777 177777
 177777 177777 177777 177777
 #TW
 ТАБЛИЦА СТОРОЖЕВЫХ ОСТАНОВОВ
 METKA :003000        005000
 #TM
  НИЖН.ГРАНИЦА  ВЕРХ.ГРАНИЦА     КОД-АДРЕС         МАСКА
        002000 ENDG  :006000        000003        000077
 #



      4.3.9. Вывод текстовой информации. Директива "A"



     Данная директива выводит на экран  дисплея  содержимое  памяти  в
символьном виде.

     Прервать вывод текста можно сомволом <СУ/Z>, введенным с  клавиа-
туры терминала.


                                 - 18 -




     Синтаксис:

<B>;<N>A
       - вывод <N> символов текста с адреса <B>.

     Если параметр <В> не вводился, то вывод символов текста начинает-
ся с последнего открывавшегося в области данных или в области програм-
мы адреса.

     После завершения вывода можно внести, если необходимо,  изменения
в распечатанный текст. Можно вводить текст длиной не более <N>  симво-
лов. Если вводится меньшее число символов, то строку неодходимо закон-
чить символом <СУ/Z>.

     Если параметр <N> не вводится, то директива трактуется  как  оши-
вочная.

Пример:

 #7040;5A PPPPP OOO<СУ/Z>
 #7040;5A OOOPP



      4.3.10. Вывод и изменение содержимого  памяти  в  заданном
              формате. Директива "F"



     Данная директива позволяет выводить на экран  дисплея  содержимое
памяти в заданном формате и выполняется только от открытого адреса.

     Синтаксис:

FI
       - показать содержимое памяти (16 бит) как целое десятичное чис-
         ло одинарной точности.

FJ
       - Показать содержимое памяти (32  бита)  как  целое  десятичное
         число двойной точности.

FE
       - Показать содержимое памяти (32 бита) как  число  с  плавающей
         точкой одинарной точности в экспоненциальной форме.

FD
       - Показать содержимое памяти (64 бита) как  число  с  плавающей
         точкой двойнной точности в экспоненциальной форме.

FX
       - Показать содержимое  памяти  (16  бит)  как  3  символа  кода
         RADIX-50.

     После этого можно выпOлнять такие операции:

       - выполнить директивы <ВК>, <ПС> или <^>;

       - ввести новое значение содержимого памяти и выполнить директи-

                                 - 19 -




         вы <ВК>, <ПС> или <^>.

     Директива трактуется как ошибочная, если:

       - отсутствовал открытый адрес;

       - был открыт байт или регистр;

       - был введен по крайней мере один символ,  не  разрешенный  для
         представления в заданном формате.

 Пример:

 #10000/       000002 FI  2 47<ВК>
 #/       000057 FI  47 -1234<ВК>
 #/       175456 FI -1234 <ВК>
 #20000/       000000 FE  0.00000000    -125.4E-10<ПС>
        020004 /       000000 ^
        020002 /       067602 ^
        020000 /       131527 FE -0.12540000E-07 <ВК>
 #2000/       071542 FX=RRR LL<ПС>
        002002 /       00000 FX=    OOO<ВК>
 #/       060047 FX=OOO<^>
        002000 /       46362 FX=LLR
Сервисные директивы



      4.3.11. Построчный транслятор. Директива "SA"



     Данная директива обеспечивает возможность  построчной  трансляции
команд с языка, близкого к языку ассемблера.  Отличия  использованного
языка от языка ассемблера заключаются в следующем:

       - отсутствуют директивы ассемблера;

       - вместо обозначений <SP> и <PC>,  используемых  в  ассемблере,
         отладчик использует обозначения <R6> и <R7>.

     Порядок ввода меток и комментариев не отличается от  принятого  в
ассемблере. Символы <ВК> и <ПС> определяют конец команды.

     Синтаксис:

<A>;SA
       - установить режим трансляции  команд  начиная  с  адреса  <А>.
         Адрес для данной директивы должен быть  четным.  В  противном
         случае директива трактуется как ошибочная.

     Если параметр <А> не вводился, то режим трансляции устанавливает-
ся с последнего открывавшегося в области данных или в области програм-
мы адреса.

     Выход из транслятора осуществляется по символу <СУ/Z>, введенному
с клавиатуры терминала.

                                 - 20 -




 Пример:

 #3000;SA
        003000 :MOV R1,R2<BK>
        003002 :JSR R7,LABL<СУ/Z>
 #



      4.3.12. Установка границ области памяти. Директива "MB"



     Данная директива устанавливает нижнюю (Н) и верхнюю  (В)  границы
области памяти для всех ниже перечисленных директив работы с  памятью.
Границы области памяти могут задаваться числом или именем. Нижняя гра-
ница не должна превышать верхней. В противном случае  директива  трак-
туется как ошибочная и установки границ не происходит. При этом сохра-
няются значения границ, установленные ранее.

     Просмотр установленных границ осуществляется директивой "TM".

     Синтаксис:

<H>;<B>MB
       - установить границы.

 Пример:

 3000;6000MB
 #TM
 НИЖН.ГРАНИЦА  ВЕРХ.ГРАНИЦА     КОД-АДРЕС         МАСКА
        003000        006000        000000        000000
 #
       - устанавливает нижнюю границу на адресе 3000 и верхнюю границу
         на адресе 6000.



      4.3.12.1. Поиск кодов. Директива "MD"



     Данная  директива  осуществляет  поиск  слов  памяти,  содержащих
заданную битовую комбинацию <К>, по установленной маске <М> в  области
памяти с границами, установленными директивой "MB". На печать выводит-
ся содержимое слова <S>, удовлетворяющее условию S&<M>=<K>.  Если  код
и/или маска не вводились, то в  качестве  них  используются  значения,
установленные ранее. Данная директива,  набраная  на  нижнем  регистре
(MD), прекращает поиск после первого нахождения. Дальнейший поиск осу-
ществляется при повторном указании данной  директивы.  Директива  счи-
тается ошибочной, если хотя бы одна из границ является нечетной.

     Просмотр аргумента поиска и маски осуществляется директивой "TM".

     Синтаксис:

<K>;<M>MD
       - поиск кодов <К> по маске <М>.

                                 - 21 -




 Пример:

 #3;77MD
        003010 /       000003
        004002 /       000103
        005100 /       000003
 #TM
  НИЖН.ГРАНИЦА  ВЕРХ.ГРАНИЦА     КОД-АДРЕС         МАСКА
        003000        006000        000003        000077
 #



      4.3.13. Поиск обращений к адресу. Директива "MP"



     Данная директива осуществляет поиск слов памяти, содержащих обра-
щения к указанному адресу в области памяти с границами, установленными
директивой "МВ". Если параметр <А> не вводился,  то  в  качестве  него
используется значение, установленное  ранее.  Адрес  может  задаваться
числом или именем. Данная директива, набраная на нижнем регистре (MP),
прекращает поиск после первого нахождения. Дальнейший поиск  осуществ-
ляется при повторном указании данной  директивы.  Директива  считается
ошибочной, если хотя бы одна из границ является нечетной.

     Синтаксис:

<A>;MP
       - ПОИСК ОБРАЩЕНИЙ К АДРЕСУ <А>.

 Пример:

 #4000;MP
        003100 /       004000
        003510 /       000266
 #TM
  НИЖН.ГРАНИЦА  ВЕРХ.ГРАНИЦА     КОД-АДРЕС         МАСКА
        003000        006000        004000        000000
 #



      4.3.14. Поиск строки. Директива "MA"



     Данная директива осуществляет поиск строки по указанной модели.

     Синтаксис:

;MA
       - показать старую и задать новую модель для поиска;

MA
       - поиск заданной модели в указанных границах;

 Пример:


                                 - 22 -




 #;MA
 МОДЕЛ:STROKA
 #MA
        002045 \123 =S<ПС>
        002046 \124 =T<ПС>
        002047 \122 =R<ПС>
        002050 \117 =O<ПС>
        002051 \113 =K<ПС>
        002052 \101 =A



      4.3.15. Форматирование области памяти. Директива "MF"



     Данная директива копирует содержимое указанного числа байт облас-
ти памяти во всю область в границах, установленных директивой "MB".

     Синтаксис:

<K>MF
       - заполнить область памяти  содержимым  <К>  первых  байт  этой
         области.

 Пример:

 #3000\000= 377<ВК>
 #1MF
 #
       - заполняет область памяти кодом 377


     Примечание.

     1. Параметр <К> может принимать значения 0 <= К <= 376. Если ука-
занное значение параметра <К> выходит за рамки данного ограничения, то
принимается К=376.

     2. Если параметр <К> опущен, то по умолчанию принимается К=2.



      4.3.16. Копирование области памяти в файл. Директива "MS"



     Данная директива позволяет копировать область памяти,  определен-
ную директивой "MB", в файл с указанным именем, начиная с любого  бло-
ка. Имя файла должно удовлетворять требованиям ОС ДВК.

     Директива считается  ошибочной,  если  хотя  бы  одна  из  границ
является нечетной или в файле нет указанного блока.

     Синтаксис:

 <N>MS
 <ИМЯ КОПИИ>:<ИМЯ ФАЙЛА><ВК>
       - скопировать определенную область памяти в  файл  с  указанным

                                 - 23 -




         именем, начиная с блока с номером <N>.

     Если параметр <N> не  вводился,  то  создается  новый  файл-копия
определенной области памяти.

 Пример:

 #MS
 ИМЯ КОПИИ      :COPY<ВК>
 #
       - создает файл-копию DK:COPY.SAV Определенной области памяти;

 #2MS
 ИМЯ КОПИИ      :MY:PROG<ВК>
 #
       - копирует определенную  область  памяти  в  файл  MY:PROG.SAV,
         начиная со второго блока.


     Примечание. Файл, в который производится копирование, имеет  рас-
ширение по умолчанию - "SAV"



      4.3.17. Копирование файла в область памяти. Директива "ML"



     Данная директива позволяет копировать файл, начиная с  указанного
блока, в область памяти с установленными границами. Имя  файла  должно
удовлетворять требованиям ОС ДВК.

     Директива считается  ошибочной,  если  хотя  бы  одна  из  границ
является нечетной или в файле нет указанного блока.

     Синтаксис:

<N>ML
<ИМЯ КОПИИ>:<ИМЯ ФАЙЛА><ВК>
       - скопировать файл, начиная с блока с номером <N>, в определен-
         ную область памяти.

     Если параметр <N> не вводился, то  по  умолчанию  подразумевается
<N>=0.

 Пример:

 #ML
 ИМЯ КОПИИ      :MY1:PROG<ВК>
 #
       - КОПИРУЕТ ФАЙЛ MY1:PROG.COM В определенную область памяти;

 #3ML
 ИМЯ КОПИИ      :PROG1<ВК>
 #
       - копирует файл DK:PROG1.SAV, начиная с третьего блока, в опре-
         деленную область памяти.

                                 - 24 -




     Примечание.
       - Копируемый файл имеет расширение по умолчанию - "SAV"
       - если длина копируемого файла меньше длины определенной облас-
         ти памяти, то верхняя граница  области  корректируется  соот-
         ветственно длине этого файла.



      4.3.18. Установка  и   отмена   режима   протоколирования.
              Директива "NP"



     Данная директива управляет режимом протоколирования диалога поль-
зователя с отладчиком. Имя файла протокола должно удовлетворять согла-
шениям, принятым в ОС ДВК, ФОДОС, РАФОС, RT11.

     Синтаксис:

 <I>NP
 <СТРОКА ПОДСКАЗКА>:<ИМЯ ФАЙЛА><ВК>
       - установить режим  протоколирования,  определяемый  параметром
         <I>, в файл с заданным именем. <I> Принимает значения:

0
       - режим протоколирования  информации,  отображаемой  на  экране
         дисплея;

1
       - режим протоколирования информации, вводимой с клавиатуры тер-
         минала.

 <I>;NP
       - останов протоколирования. Тип останова определяется  парамет-
         ром <I>, который принимает значения:

0
       - прекратить протоколирование с сохранением файла протокола;

1
       - приостановить режим протоколирования  (восстановление  режима
         осуществляется по директиве "NP");

2
       - отменить режим протоколирования без сохранения файла протоко-
         ла.

     Если параметр <I> не указывается, то его  значение  по  умолчанию
принимается равным 0.

 Пример:

 #NP
 ИМЯ ФАЙЛА ПРОТОКОЛА   :DP:PROT<ВК>
 #
       - устанавливает режим протоколирования с  выводом  протокола  в
         файл DP:PROT.TXT;

                                 - 25 -




 #1;NP
 ПРОТОКОЛИРОВАНИЕ ПРИОСТАНОВЛЕНО
 #
       - приостанавливает режим протоколирования;

 #NP
 #
       - восстанавливает режим протоколирования;

 #;NP
 ПРОТОКОЛ СОЗДАН
 #
       - завершает режим протоколирования.


     Примечание. Файл протокола имеет по умолчанию расширение "TXT".



      4.3.19. Запуск командных файлов. Директива "NC"



     Пользователь может записать  набор  директив  отладчика,  которые
необходимо выполнить последовательно, в виде файла.  Этот  файл  назы-
вается командным. Командный файл может быть сформирован любыми систем-
ными средствами, предназначенными для создания исходных текстов, в том
числе используя режим протоколирования информации, вводимой с  клавиа-
туры терминала. Имя командного файла должно удовлетворять соглашениям,
принятым в ОС ДВК, ФОДОС, РАФОС, RT11.

     Данная директива позволяет запускать командный файл  на  исполне-
ние, приостанавливать и прекращать его выполнение.

     В командные файлы можно включать комментарии.  Комментарием  счи-
тается текст, начинающийся с восклицательного знака  "!",  до  другого
восклицательного знака или до  конца  строки.  В  процессе  выполнения
командного файла комментарии  отображаются  на  экране  дисплея  и  не
влияют на процесс отладки.

     В командном файле можно указать место, где необходимо  приостано-
вить его выполнение и перейти в диалоговый режим. Символом,  указываю-
щим на необходимость приостановки, является процент "%".

     Допускается в командном файле первый символ любой директивы  ука-
зывать в виде кода, заключенного в угловые скобки. Данную  возможность
целесообразно использовать для директив, использующих в качестве свое-
го идентификатора непечатный символ ("ПС" и "ВК").

     Из исходного командного  файла  можно  вызвать  другой  командный
файл. Эта процедура называется вложением. Отладчик допускает  вложение
командных файлов до уровня 1.  Выполнение  текущего  командного  файла
прекращается при достижении физического конца файла.  Когда  вложенный
командный файл завершит свое выполнение, то управление возвращается  в
исходный командный файл на строку, следующую за спецификацией  вложен-
ного командного файла. При завершении работы исходного командного фай-
ла, управление передается отладчику.

     Управление выполнением командных файлов осществляется  с  помощью

                                 - 26 -




специальных директив управления:

<СУ/P>
       - выполнить одну директиву командного файла или переход  выпол-
         ния командного файла в пошаговом режим;

<СУ/G>
       - продолжить выполнение командного файла в автоматическом режи-
         ме;

<СУ/R>
       - отменить текущий командный файл и перейти в диалоговый режим.
         Если данная директива отменяет вложенный командный  файл,  то
         по директивам  <СУ/G>  и  <СУ/P>  будет  выполнятся  исходный
         командный файл со строки, следующей за спецификацией  вложен-
         ного командного файла.

<СУ/E>
       - отменить командные файлы на всех уровнях вложенности и перей-
         ти в диалоговый режим.

     Синтаксис:

 NC <ИМЯ ФАЙЛА><ОГРАНИЧИТЕЛЬ>

где:

<ограничитель>
       - один из разрешенных символов:
              - <СУ/P> - загрузить командный файл с указанным именем и
                перейти в диалоговый режим. Запуск и/или отмена загру-
                женного  командного  файла  осуществляется  с  помощью
                директив управления;
              - <СУ/G> - загрузить командный файл с указанным именем и
                начать его выполнение в автоматическом режиме;
              - <вк> - аналогичен символу <СУ/G>.

 Пример:

 #NC TEST<ВК>
       - загружает и запускает командный файл с именем TEST.COM.



      4.3.20. Школа. Директива "?"



     Данная директива используется  для  вывода  на  терминал  краткой
информации о директивах отладчика.


     Примечание. Данная директива может задаваться в любой момент и не
влияет на процесс отладки.

                                 - 27 -




      4.4. Прочие директивы





      4.4.1. Определение параметров именем. Директива "L"



     Данная директива  определяет  параметр  директив  адресом  имени,
определенном в исходном тексте отлаживоемой программы. В качестве име-
ни используется не более 6 первых символов,  указанных  за  директивой
"L". После ввода имени могут следовать директивы:
    <ВК>, <ПС>, <^>, </>, <\>, <;>, <@>, <=>, <,>, <+>, <->, ПРОБЕЛ

     При вводе директивы на экран дисплея  выводится  адрес,  которому
соответствует данное имя. Сброс режима ввода имени  осуществляется  по
символу <СУ/Z>.

     Синтаксис:

 L<ИМЯ><ДИРЕКТИВА>

 Пример:

 #LMETKA :003000 /       004576



      4.4.2. Директива "ПРОБЕЛ"



     Данная директива является пустой и используется  для  ограничения
имени в тех случаях, когда имя является параметром для директив, имею-
щих буквенные символы.

 Пример:

 #LGRAN1;LGRAN2 MB
 #



      4.4.3. Ввод кода. Директива "<"



     Данная директива используется для ввода первого символа директивы
его кодом. Выполнение директивы начинается при вводе закрывающей угло-
вой скобки ">". Целесообразно использование данной директивы при  соз-
дании командных файлов, используя режим  протоколирования  информации,
вводимой с клавиатуры терминала, для указания директив, использующих в
качестве своего идентификатора непечатный символ ("ПС" и "ВК").

     Синтаксис:

                                 - 28 -




 <код символа>

 Пример:

 #R0/       000000 <12>
 R1/       000000 <12>
 R3/       001456 <15>
 #



      4.4.4. Ввод комментария. Директива "!"



     Данная директива трактует следующие за ней не более 80.  Символов
до конца строки как комментарий.

     Директива не влияет на процесс отладки и может  задаваться  после
любой директивы кроме директив "A" и "F", после которых она трактуется
как символ.

     Использование данной директивы целесообразно для  комментирования
командных файлов, создаваемых использованием  режима  протоколирования
информации, вводимой с клавиатуры терминала.

     Синтаксис:

 !<ТЕКСТ><ВК>

 Пример:

 #!просмотр регистров
 R0/       0000000
 R1/       0000000
 R2/       0010000
 R3/       0002376
 R4/       0000000
 R5/       0010200
 R6/       0000776
 R7/       0015400



      4.4.5. Ввод  признака   приостанова   командного   файла.
             Директива "%"



     Данная директива используется для указания мест, в которых  необ-
ходимо приостановить выполнение командного файла, создаваемого исполь-
зованием режима протоколирования  информации,  вводимой  с  клавиатуры
терминала.

     Директива не влияет на процесс отладки и может  задаваться  после
любой директивы кроме директив "A" и "F", после которых она трактуется
как символ.

                                 - 29 -




      4.4.6. Занесение кода символа. Директива "'"



     Данная директива используется для занесения в открытый адрес кода
указанного символа. После занесения кода символа открывается как  байт
следующий по порядку адрес.

     Синтаксис:

 '<символ>

 Пример:

 R0\015= 'A
 R1\012=
 2000\102=B 'C
        2001\104=D



      4.4.7. Занесение кода 2-х символов. Директива """



     Данная директива используется для занесения в открытый как  слово
адрес кода 2-х указанных символов. После  занесения  кода  открывается
как слово следующий по порядку адрес.

     Синтаксис:

 "<символ>

 Пример:

 R0/       000015 "AB
 R1/       000012
 2000/       041101 "CD
        2002/       000012

                                 - 30 -




                 5. Директивы нестандартного доступа






      5.1. Доступ на диск. Директива "NA"



     Директива предназначена для доступа к файлу любого типа  на  уст-
ройстве прямого доступа либо к самому устройству. С помощью  директивы
"NB" можно указать базу для директивы "NA" в виде  количества  блоков.
Директива "NB" выполняется автоматически после директивы "NA", а также
может использоваться самостоятельно.

Синтаксис директивы "NA":

NA


ВВЕДИТЕ ИМЯ ФАЙЛА:<СПЦФ>


ВВЕДИТЕ БАЗУ:
НОМЕР БЛОКА=N БЛОКА


Синтаксис директивы "NB":

NA


ВВЕДИТЕ БАЗУ:
НОМЕР БЛОКА=N БЛОКА

     Где:

СПЦФ   - спецификация файла, тип по умолчанию "SAV"

NБЛОКА - номер блока на диске, с которого начинается доступное  отлад-
         чику адресное пространство.

     После выполнения директивы, в  качестве  доступного  пространства
используется указанный файл Директивы доступа отладчика могут  исполь-
зоваться для постмотра и изменения содержимого указанного файла.

     Выключение доступа на диск осуществляется  директивой  ";NA"  или
директивой "NO".

                                 - 31 -




      5.2. Доступ к оверлейным программам





      5.2.1. Общие сведения



     Понятие оверлейной программы описывается  в  документации  на  ОС
ДВК.

     Особенностью оверлейной программы является наличие в ее  адресном
пространстве нескольких оверлейных областей, в каждую из которых моугт
поочередно загружаться и затем исполняться несколько  оверлейных  сег-
ментов. Т.к. содержимое оверлейной области памяти меняется, в  зависи-
мости от загруженного в нее сегмента, то для однозначного  определения
места в оверлейной области программы, к которому осуществляетя  дотуп,
необходимо кроме адреса определить номер сегмента.

     Описываемые ниже директивы позволяют обеспечить доступ к оверлей-
ным сегментам. Доступ к оверлейным программам назовем оверлейным  дос-
тупом, а обычный (неоверлейный) доступ - последовательным.



      5.2.2. Директива "NO"



     Директива предназначена  для  организации  доступа  к  оверлейной
программе. Директива открывает  на  устройстве  прямого  доступа  файл
программы (либо само устройство) и позволяет  осуществить  директивами
"OO" и "OD" доступ к оверлейной прграмме в ОЗУ и на диск  соответсвен-
но.

     Синтаксис:


NO

ВВЕДИТЕ ИМЯ ФАЙЛА:<СПЦФ>
ДОСТУП НА ДИСК Y/N[N]? <A>


Где <СПЦФ>
       - спецификация файла, тип по умолчанию "SAV"

Где <А>
       - признак доступа на диск или в ОЗУ, поумолчанию ОЗУ

     Директивой автоматически производится настройка на  таблицу  имен
со спецификацией <СПЦФ>.

     Доступ в корневую область программы всегда разрешен как при  дос-
тупе в ОЗУ, так и при доступе на диск.

     Доступ выше верхнего адреса программы разрешен только при доступе

                                 - 32 -




в ОЗУ.

     Доступ в оверлейные области при доступе на диск  и  в  ОЗУ  может
осуществляться с помощью директив "," или "OS", определяющих по номеру
сегмента или имени программы настройку на оверлейный сегмент.

                                 - 33 -




                                                          ПРИЛОЖЕНИЕ








Если при доступе в оверлейную область ОЗУ произведена настройка на
нерезидентный сегмент данной области, то производится доступ на диск с
блокировкой записи.


     Примечание. Если при доступе в оверлейную область ОЗУ не произве-
дена настройка на сегмент данной области, то  поризводится  последова-
тельный доступ в ОЗУ.

     Выключение оверлейного доступа  осущесивляется  директивой  ";NO"
(при переходе к последовательному доступу в ОЗУ) или  директивой  "NA"
(при переходе к последовательному доступу на диск).



      0.0.1. Директивы "OO" и "OD"



     Директивы "OO" и "OD" используются после диретивы "NO" для  изме-
нения типа доступа к оверлейной программе без указания имени программы
и перенастройки на таблицу имен.  Директива  "OO"  включает  доступ  к
оверлейной программе в ОЗУ, директива "OD" - на диск.



      0.0.2. Директива "ТО"



     Директива  "ТО"  используется  после  директивы  "NO".  Директива
выдает информацию об оверлейных областях и  загруженных  в  ОЗУ  и/или
настроенных сегментах в виде таблицы. Для  каждой  оверлейной  области
выводится строка, в которой указывается номер сегмента, адрес оверлей-
ной области, верхняя граница сегмента, номер блока на диске,  признаки
настройки и резидентности. Если в оверлейную область не загружен  сег-
мент и не настроен ни один из сегментов этой области , то в соответст-
вующей строке вместо номера сегмента и его верхней границы  печатаются
символы "*". (Для директивы "ТО" при доступе на диск все сегменты счи-
таются незагруженными). В последней строке таблицы  выводитсч  верхний
адрес программы, выделенный символами "-".

                                 - 34 -




      0.0.3. Директива "OS"



     Директива "OS" используется только при доступе к оверлейной прог-
рамме для настройки на сегмент оверлейной области по номеру сегмента.

     Синтаксис:

<N>OS


       - Где N номер оверлейного сегмента.




                       1. Сообщения об ошибках




ДИРЕКТИВА НЕ ОПИСАНА В ШКОЛЕ
       - директива, справка о которой запрашивается, не описана в шко-
         ле отлабчика;

ЗАВИСАНИЕ
       - прерывание по вектору 4;

ИМЯ НЕ ОПРЕДЕЛЕНО
       - набранное имя программы не существует или не было  указано  в
         командной строке программы TN;
       - набранное имя переменной  не  определено  в  исходном  тексте
         программы или имя программы, в которой обьявлена  переменная,
         не было указано в командной строке программы TN;

НЕВЕРНОЕ ИМЯ ФАЙЛА
       - в набранном имени файла была допущена синтаксическая ошибка;

НЕВЕРНЫЕ ГРАНИЦЫ ОБЛАСТИ ПАМЯТИ
       - попытка установить нижнюю границу области памяти больше верх-
         ней;
       - попытка выполнить директивы "MD", "MP", "MS" или  "ML"  когда
         хотя бы одна из установленных границ является нечетной;

НЕВЕРНЫЙ НОМЕР БЛОКА
       - в директивах "MS" или "ML" указан несуществующий номер  блока
         для данного файла;

НЕВЕРНЫЙ УРОВЕНЬ ВЛОЖЕННОСТИ
       - попытка вызова из командного файла другого командного файла с
         уровнем вложенности больше допустимого;

НЕСУЩЕСТВУЮЩИЙ КОД
       - прерывание по вектору 10;

НЕТ МЕСТА ДЛЯ ДРАЙВЕРА
       - отладчик не может загрузить  драйвер  указанного  устройства,
         так как для него нет места в свободной памяти;

                                 - 35 -




НЕТ МЕСТА ДЛЯ ФАЙЛА
       - на указанном устройстве нет свободной  области  для  создания
         нового файла;

НЕТ СВОБОДНОГО КАНАЛА
       - отладчик не может выполнить операции над файлами, так как нет
         ни одного свободного канала;

ОШИБКА ЗАПИСИ В ФАЙЛ
       - при попытке записи в файл  на  внешнее  устройство  произошла
         ошибка;

ОШИБКА ЧТЕНИЯ ФАЙЛА
       - при попытке чтения  файла  с  внешнего  устройства  произошла
         ошибка;

СИНТАКСИЧЕСКАЯ ОШИБКА
       - несуществующая директива или неверный синтаксис директивы;

ТАБЛИЦА ПЕРЕПОЛНЕНА
       - переполнена таблица точек останова;

ФАЙЛ НЕ НАЙДЕН
       - файл с данным именем отсутствует на указанном устройстве;

ФАЙЛ НЕ ОТКРЫТ
       - попытка чтения файла или записи в файл, который не  был  отк-
         рыт.






































                                             